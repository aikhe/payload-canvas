version: '3'

services:
  payload:
    image: node:18-alpine
    ports:
      - '3000:3000'
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "yarn install && yarn dev"
    depends_on:
      - mongo
    env_file:
      - .env

  mongo:
    image: mongo:latest
    ports:
      - '27017:27017'
    command:
      - --storageEngine=wiredTiger
    volumes:
      - data:/data/db
    logging:
      driver: none

volumes:
  data:
  node_modules:


version: '3.8'

services:
  payload:
    image: node:18-alpine
    ports:
      - '3000:3000'
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "yarn install && yarn dev"
    depends_on:
      postgres: # Changed from mongo
        condition: service_healthy # Wait for postgres to be healthy
    env_file:
      - .env

  postgres: # New service for PostgreSQL
    image: postgres:16-alpine # Using a lightweight Alpine-based PostgreSQL 16 image
    container_name: payload_postgres_db # A memorable name for your container
    environment:
      POSTGRES_DB: your_payload_db # Name of your database
      POSTGRES_USER: payload_user # Database user
      POSTGRES_PASSWORD: payload_password # Database password
    ports:
      - "5432:5432" # Host port:Container port (maps 5432 on your machine to 5432 in the container)
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data outside the container

volumes:
  postgres_data: # New named volume for PostgreSQL data
  node_modules: # Existing volume for node_modules
